{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/modals/informative-dialog/informative-dialog.component.ts","./src/app/modals/informative-dialog/informative-dialog.component.html","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-details/member-details.component.ts","./src/app/members/member-details/member-details.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_models/userParams.model.ts","./src/app/_models/pagination.model.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationsErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  get404Error(): void{\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(\r\n      response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  get400Error(): void{\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(\r\n      response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  get500Error(): void{\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(\r\n      response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  get401Error(): void{\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(\r\n      response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n  get400ValidationError(): void{\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(\r\n      response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.log(error);\r\n        this.validationsErrors = error;\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n}\r\n","<ng-container *appHasRole='[\"ADMIN\"]'>\r\n    <!-- <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button> -->\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\r\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 400 Validation Error</button>\r\n        <div class=\"row mt-5\" *ngIf=\"validationsErrors.length > 0\">\r\n            <ul class=\"text-danger\">\r\n                <li *ngFor=\"let error of validationsErrors\">\r\n                        {{error}}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n</ng-container>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    };\r\n   }\r\n  writeValue(obj: any): void {\r\n    // TODO document why this method 'writeValue' is empty\r\n\r\n\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input\r\n    type=\"text\"\r\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n    class=\"form-control\"\r\n    [formControl]='ngControl.control'\r\n    placeholder=\"{{label}}\"\r\n    bsDatepicker\r\n    [bsConfig]='bsConfig'\r\n    [maxDate]='maxDate'\r\n    >\r\n\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private accountService: AccountService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm(): void{\r\n    this.registerForm =  this.formBuilder.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required,\r\n      Validators.minLength(4), Validators.maxLength(25)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn{\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n      ? null : {isMatching: true};\r\n    };\r\n  }\r\n\r\n  register(): void{\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      response => {\r\n        this.toastr.success('Registration was successful');\r\n        this.cancelRegister.emit(false);\r\n      }, error => {\r\n\r\n        this.validationErrors = error;\r\n      });\r\n  }\r\n\r\n  cancel(): void{\r\n    this.toastr.warning('Registration canceled');\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">Sign up</h2>\r\n    <hr>\r\n\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value=\"male\" formControlName='gender'>Male\r\n        </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value=\"female\" formControlName='gender' class=\"ml-3\">Female\r\n        </label>\r\n    </div>\r\n\r\n    <app-text-input [formControl]='registerForm.controls[\"username\"]'\r\n        [label]='\"Username\"'> </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"knownAs\"]'\r\n        [label]='\"Known As\"'> </app-text-input>\r\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]'\r\n        [label]='\"Date Of Brith\"' [maxDate]=\"maxDate\"> </app-date-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"city\"]'\r\n        [label]='\"City\"'> </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"country\"]'\r\n        [label]='\"Country\"'> </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"password\"]'\r\n        [label]='\"Password\"' [type]='\"password\"'> </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]'\r\n        [label]='\"Confirm Password\"' [type]='\"password\"'> </app-text-input>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                        {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>    \r\n    \r\n    <div class=\"form-group text-center\">\r\n        <button  class=\"btn btn-success mr-2\"[disabled]='!registerForm.valid' type=\"submit\">Register</button>\r\n        <button class=\"btn btn-light mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n    </div>\r\n</form>\r\n\r\n<!-- <p>Form value {{registerForm.value | json}}</p>\r\n<p>Form value {{registerForm.status | json}}</p> -->\r\n\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message.model';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n messageContent: string;\r\n\r\n  constructor(private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.add('bg-img-in1');\r\n  }\r\n\r\n  sendMessage(): void{\r\n    this.messageService.sendMessage(this.username, this.messageContent).subscribe(\r\n      message => {\r\n          this.messages.push(message);\r\n          this.messageForm.reset();\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div *ngIf=\"messages?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n        <ul *ngIf=\"messages?.length > 0\">\r\n            <li *ngFor=\"let message of messages\">\r\n                <div>\r\n                    <span class=\"chat-img float-right\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\r\n                        alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                && message.senderUsername !== username\">\r\n                                (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                    <p>{{message.content}}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</div>\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                name=\"messageContent\"\r\n                required\r\n                [(ngModel)]=\"messageContent\"\r\n                type=\"text\"\r\n                class=\"form-control input-sm\" \r\n                placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css']\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>It is under development</p>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit, OnDestroy {\r\n\r\n  constructor() { }\r\n  ngOnDestroy(): void {\r\n    document.body.classList.remove('bg-img-not_found');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.remove('bg-img-in1');\r\n    document.body.classList.add('bg-img-not_found');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>404 Not found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return home page</button>\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, OnDestroy } from '@angular/core';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n\r\n  constructor(private http: HttpClient, ) { }\r\n\r\n\r\n  login(model: User): Observable<void>{\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user){\r\n         this.setCurrentUser(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(model: any): Observable<object>{\r\n    return this.http.post(this.baseUrl + 'account/register', model);\r\n  }\r\n\r\n  setCurrentUser(user: User): void{\r\n   if (user !== null){\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).roles;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n   }\r\n  }\r\n\r\n  logout(): void{\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n  }\r\n  getDecodedToken(token): any{\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n   }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refressing the page will make the error disapperar!</h4>\r\n<ng-container>\r\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n    <p>What to do next?</p>\r\n    <ol>\r\n        <li>Open the crome dev tools</li>\r\n        <li>Inspect the  network tab</li>\r\n        <li>Check the failing request</li>\r\n        <li>Examine the request URL - make sure it is correct</li>\r\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\r\n    </ol>\r\n    <p>Following is the stack trace - this is where you investigation should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>about works!</p>\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user.model';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef,\r\n              private templateRef: TemplateRef<any>,\r\n              private accountService: AccountService) {\r\n                this.accountService.currentUser$.pipe(\r\n                  take(1)\r\n                ).subscribe(\r\n                    user => {\r\n                      this.user = user;\r\n                    }\r\n                );\r\n               }\r\n\r\n  ngOnInit(): void {\r\n      if (!this.user?.roles || this.user == null){\r\n        this.viewContainerRef.clear();\r\n        return;\r\n      }\r\n\r\n      if (this.user?.roles.some(r => this.appHasRole.includes(r))){\r\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n      }else{\r\n        this.viewContainerRef.clear();\r\n      }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerServices: NgxSpinnerService) { }\r\n\r\n  busy(): void{\r\n    this.busyRequestCount++;\r\n    this.spinnerServices.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333',\r\n    });\r\n  }\r\n\r\n  idle(): void{\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0){\r\n        this.busyRequestCount = 0;\r\n        this.spinnerServices.hide();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { emit } from 'process';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  registerMode = false;\r\n  // users: any;\r\n\r\n  constructor(private accountService: AccountService,\r\n              private router: Router) { }\r\n\r\n  ngOnDestroy(): void {\r\n    document.body.classList.remove('bg-img-home');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.currentUser$.subscribe(\r\n      user => {\r\n          if (user !== null){\r\n              this.router.navigateByUrl('/members');\r\n          }\r\n      });\r\n    document.body.classList.remove('bg-img-in1');\r\n    document.body.classList.add('bg-img-home');\r\n    // this.getUsers();\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  registerToggle(){\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  /*getUsers(){\r\n    this.http.get('https://localhost:5001/api/users')\r\n    .subscribe(users => this.users = users);\r\n  }*/\r\n\r\n  // tslint:disable-next-line:typedef\r\n  cancelRegisterMode(event: boolean){\r\n       this.registerMode = event;\r\n  }\r\n}\r\n","\r\n   <section >\r\n    <div class=\"container mt-5\" >\r\n        <div *ngIf=\"!registerMode\" style='text-align:center;'>\r\n        <h1>Find your match</h1>\r\n        <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\r\n    <div class=\"text-center\">\r\n        <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\r\n    </div>\r\n        </div>\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register> <!-- [usersFromHomeComponents]=\"users\" -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n   </section>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:8080/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user.model';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if (currentUser){\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message.model';\r\nimport { Pagination } from '../_models/pagination.model';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService,\r\n              private confirmService: ConfirmService) { }\r\n  ngOnDestroy(): void {\r\n    document.body.classList.remove('bg-img-in2');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.remove('bg-img-in1');\r\n    document.body.classList.add('bg-img-in2');\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages(): void{\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(\r\n      response => {\r\n          this.messages = response.result;\r\n          this.pagination = response.pagination;\r\n          this.loading = false;\r\n      });\r\n\r\n  }\r\n\r\n  deleteMessage(id: number): void{\r\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(\r\n      result => {\r\n          if (result){\r\n            this.messageService.deleteMessage(id).subscribe(\r\n              () => {\r\n                this.messages?.splice(this.messages.findIndex(m => m.id === id), 1);\r\n\r\n              });\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n  pageChanged(event: any): void{\r\n      this.pageNumber = event.page;\r\n      this.loadMessages();\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row mb-4\">\r\n    <div class=\"btn-group\" name='container'> \r\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\"><i class=\"fa fa-envelope\"></i>Unread</button>\r\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\"><i class=\"fa fa-envelope-open\"></i>Inbox</button>\r\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" \r\n            (click)=\"loadMessages()\"><i class=\"fa fa-paper-plane\"></i>Outbox</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n    <h3 style=\"font-weight: bold; color: #be1515;\">No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n        <tr>\r\n            <th style=\"width: 40%\">Message</th>\r\n            <th style=\"width: 20%\">From / To</th>\r\n            <th style=\"width: 20%\">Sent / Received</th>\r\n            <th style=\"width: 20%\"></th>\r\n        </tr>\r\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" \r\n            routerLink='{{container === \"Outbox\" \r\n            ? \"/members/\" + message.recipientUsername\r\n            : \"/members/\" + message.senderUsername}}' [queryParams]='{tab: 3}'>\r\n            <td style=\"font-weight: bold;\">{{message?.content}}</td>\r\n            <td>\r\n                <div *ngIf=\"container === 'Outbox'\">\r\n                    <img\r\n                    class=\"img-circle rounded-circle mr-2\" \r\n                    src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \r\n                    alt=\"{{message.recipientUsername}}\">\r\n                    <strong>{{message?.recipientUsername | titlecase}}</strong>\r\n                </div>\r\n                <div *ngIf=\"container !== 'Outbox'\">\r\n                    <img\r\n                    class=\"img-circle rounded-circle mr-2\" \r\n                    src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                    alt=\"{{message.senderUsername}}\">\r\n                    <strong>{{message?.senderUsername | titlecase}}</strong>\r\n                </div>\r\n            </td>\r\n            <td style=\"font-weight: bold; color: darkblue;\">{{message.messageSent | timeago}}</td>\r\n            <td>\r\n                <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n    <pagination \r\n    [boundaryLinks]=\"true\" \r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\" \r\n    firstText=\"&laquo;\" \r\n    lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport {TabsModule} from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-top-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router,\r\n              private toastr: ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n          if (error){\r\n            switch (error.status) {\r\n              case 400:\r\n\r\n                if (error.error.fieldErrors){\r\n                  const modalStateError = [];\r\n                  for (const key in error.error.fieldErrors){\r\n                    if (error.error.fieldErrors){\r\n\r\n                      modalStateError.push(error.error.fieldErrors[key].message);\r\n                    }\r\n                  }\r\n                  throw modalStateError.flat();\r\n                }else if (typeof(error.error) === 'object'){\r\n\r\n                    this.toastr.error(error.error.message);\r\n                }else{\r\n                  this.toastr.error(error.error, error.status);\r\n                }\r\n                break;\r\n\r\n                case 401:\r\n                  this.toastr.error(error.statusText, error.status);\r\n                  break;\r\n                case 404:\r\n                  this.router.navigateByUrl('/not-found');\r\n                  break;\r\n                case 500:\r\n                  const navigationExtras: NavigationExtras = {state : {error: error.error}};\r\n                  this.router.navigateByUrl('/server-error', navigationExtras);\r\n                  break;\r\n              default:\r\n                this.toastr.error('Something unexpected went wrong');\r\n                console.log(error);\r\n                break;\r\n            }\r\n          }\r\n          return throwError(error);\r\n        })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-informative-dialog',\r\n  templateUrl: './informative-dialog.component.html',\r\n  styleUrls: ['./informative-dialog.component.css']\r\n})\r\nexport class InformativeDialogComponent implements OnInit {\r\n\r\n  title: string;\r\n  closeBtnName: string;\r\n\r\n\r\n  constructor(public bsModalRef: BsModalRef) {}\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>\r\n    The purpose of this project is to showcase my knowledge in the field of Spring Boot Rest API. However, please\r\n    note that it is not recommended\r\n    for use on mobile devices or mobile views as it is not yet responsive. Of course, the application will be\r\n    continuously improved, and responsive\r\n    views and other enhancements can be expected in the future.\r\n  </p>\r\n  <p>\r\n    Please note that logging in or registering may take a few minutes to execute, as the server is deployed on\r\n    render.com\r\n    using the free version. This may result in slow startup.\r\n  </p>\r\n  <p>\r\n    To keep things simple, email registration is\r\n    not available. If you wish to log in as an admin, you can use the following credentials:\r\n  </p>\r\n  <p>\r\n    Username: admin <br>\r\n    Password: Admin\r\n  </p>\r\n  <p>\r\n    You can reach my LinkdIn profile and the project Spring boot source code below.\r\n  </p>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <div class=\"linked-in\">\r\n    <a href=\"https://www.linkedin.com/in/attila-papp-6bb70b1b7/\">\r\n      <i class=\"fa fa-linkedin-square fa-3x\" style=\"color: #2867B2;\"></i> </a>\r\n  </div>\r\n  <div class=\"github\">\r\n    <a style=\"color: black;\" href=\"https://github.com/attilapapp0521/spring-boot-dating-app\">\r\n      <i class=\"fa fa-github-square fa-3x\"></i> </a>\r\n  </div>\r\n\r\n\r\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService,\r\n              private toastr: ToastrService){\r\n\r\n  }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user.roles.includes('ADMIN') || user.roles.includes('MODERATOR')) {\r\n          return true;\r\n        }\r\n        this.toastr.error('You cannot enter this area');\r\n\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user.model';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles(): Observable<User[]>{\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]): Observable<object>{\r\n      return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user.model';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\nusers: Partial<User[]>;\r\nbsModalRef: BsModalRef;\r\n\r\n  constructor(private adminService: AdminService,\r\n              private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n      this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles(): void{\r\n    this.adminService.getUsersWithRoles().subscribe(\r\n      users => {\r\n        this.users = users;\r\n      }\r\n    );\r\n  }\r\n\r\n  openRolesModal(user: User): void{\r\n      const config = {\r\n          class: 'modal-dialog-centered',\r\n          initialState: {\r\n            user,\r\n            roles: this.getRolesArray(user)\r\n          }\r\n      };\r\n\r\n      this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n      this.bsModalRef.content.updateSelectedRoles.subscribe(\r\n      values => {\r\n        const rolesToUpdate = {\r\n          roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n        };\r\n        if (rolesToUpdate){\r\n          this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(\r\n            () => {\r\n              user.roles = [...rolesToUpdate.roles];\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      );\r\n\r\n  }\r\n\r\n  private getRolesArray(user): any[]{\r\n      const roles = [];\r\n      const userRoles = user.roles;\r\n      const availableRoles: any[] = [\r\n          {name: 'ADMIN', value: 'ADMIN'},\r\n          {name: 'MODERATOR', value: 'MODERATOR'},\r\n          {name: 'USER', value: 'USER'}\r\n      ];\r\n\r\n      availableRoles.forEach(role => {\r\n        let isMatch = false;\r\n        for (const userRole of userRoles){\r\n          if (role.name === userRole){\r\n            isMatch = true;\r\n            role.checked = true;\r\n            roles.push(role);\r\n            break;\r\n          }\r\n        }\r\n        if (!isMatch){\r\n          role.checked = false;\r\n          roles.push(role);\r\n        }\r\n      });\r\n      return roles;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <tr>\r\n            <th style=\"width: 30%;\">Username</th>\r\n            <th style=\"width: 40%;\">Active roles</th>\r\n            <th style=\"width: 30%;\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.roles}}</td>\r\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService,\r\n              private toastr: ToastrService){\r\n\r\n  }\r\n\r\n  canActivate(): Observable<boolean>  {\r\n    return this.accountService.currentUser$.pipe(\r\n      map( user => {\r\n        if (user) { return true; }\r\n        this.toastr.error('You shall not pass!');\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Message } from '../_models/message.model';\r\nimport { getPaginatedResult, getPaginationsHeaders } from './paginationHelper';\r\nimport {PaginatedResult} from '../_models/pagination.model';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMessages(pageNumber, pageSize, container): Observable<PaginatedResult<Message[]>>{\r\n    let params = getPaginationsHeaders(pageNumber, pageSize);\r\n    params = params.append('container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string): Observable<Message[]>{\r\n      return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  sendMessage(username: string, content: string): Observable<Message>{\r\n      return this.http.post<Message>(this.baseUrl + 'messages', {recipientUsername: username, content});\r\n  }\r\n\r\n  deleteMessage(id: number): Observable<object>{\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member.model';\r\nimport { Message } from 'src/app/_models/message.model';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-member-details',\r\n  templateUrl: './member-details.component.html',\r\n  styleUrls: ['./member-details.component.css']\r\n})\r\nexport class MemberDetailsComponent implements OnInit {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n\r\n  constructor(private memberService: MembersService,\r\n              private route: ActivatedRoute,\r\n              private messageService: MessageService,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(\r\n      data => {\r\n        this.member = data.member;\r\n      });\r\n    this.route.queryParams.subscribe(\r\n      params => {\r\n          params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n      });\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[]{\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos){\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        large: photo?.url\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMember(): void{\r\n    this.memberService.getMember(this.route.snapshot.paramMap.get('username')).subscribe(\r\n      member => {\r\n        this.member = member;\r\n        console.log(this.member.username);\r\n\r\n\r\n    });\r\n  }\r\n\r\n  loadMessages(): void{\r\n    this.messageService.getMessageThread(this.member.username).subscribe(\r\n      messages => {\r\n        this.messages = messages;\r\n      }\r\n    );\r\n  }\r\n  selectTab(tabId: number): void{\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective): void{\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0){\r\n        this.loadMessages();\r\n    }\r\n  }\r\n\r\n  addLike(member: Member): void{\r\n    this.memberService.addLike(member.username).subscribe(\r\n  () => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n  });\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n                <div class=\"card-body\">\r\n                    <div>\r\n                        <strong>Location:</strong>\r\n                        <p>{{member.city}}, {{member.country}}</p>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Age:</strong>\r\n                        <p>{{member.age}}</p>\r\n                    </div>\r\n                     <div>\r\n                        <strong>Last Active:</strong>\r\n                        <p>{{member.lastActive | timeago}}</p>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Member since:</strong>\r\n                        <p>{{member.created | date}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <div class=\"btn-group d-flex\">\r\n                        <!-- <button class=\"btn btn-primary\">Like</button> -->\r\n                        <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n</div>\r\n\r\n<div class=\"col-8\">\r\n    <tabset class=\"member-tabset\" #memberTabs>\r\n        <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n             <h4>Description</h4>\r\n             <p>{{member.introduction}}</p>\r\n             <h4>Looking for</h4>\r\n             <p>{{member.lookingFor}}</p>\r\n        </tab>\r\n        <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n            <h4>Interests</h4>\r\n            <p>{{member.interests}}</p>\r\n        </tab>\r\n         <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n           <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \r\n           style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n         </tab>\r\n        <tab heading='Messages' (selectTab)=\"onTabActivated($event)\" >\r\n           <app-member-messages [messages]=\"messages\" [username]=\"member.username\"></app-member-messages>\r\n</tab>\r\n    </tabset>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member.model';\r\nimport { Pagination } from 'src/app/_models/pagination.model';\r\nimport { User } from 'src/app/_models/user.model';\r\nimport { UserParams } from 'src/app/_models/userParams.model';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\r\n\r\n  constructor(private memberService: MembersService) {\r\n        this.userParams = this.memberService.getUserParams();\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.add('bg-img-in1');\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers(): void{\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(\r\n      response => {\r\n          this.members = response.result;\r\n          this.pagination = response.pagination;\r\n      });\r\n  }\r\n\r\n  resetFilters(): void{\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: any): void{\r\n    this.userParams.page = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"text-center mt-3\">\r\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\" >\r\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n            <label style=\"font-weight: bold; color: cornsilk;\">Age from:</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\"\r\n             name=\"minAge\" [(ngModel)]=\"userParams.minAge\">\r\n        </div>\r\n\r\n        <div class=\"form-group px-2\">\r\n            <label style=\"font-weight: bold; color: cornsilk;\">Age to:</label>\r\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\"\r\n             name=\"maxAge\" [(ngModel)]=\"userParams.maxAge\">\r\n        </div>\r\n\r\n        <div class=\"form-group px-2\">\r\n            <label style=\"font-weight: bold; color: cornsilk;\">Show:</label>\r\n            <select name=\"gender\" style=\"width: 130px;\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\r\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n                    {{gender.display}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\r\n        <button class=\"btn btn-info ml-1\" type=\"submit\" (click)=\"resetFilters()\">Reset Filters</button>\r\n\r\n        <div class=\"col\">\r\n\r\n        <div class=\"btn-group float-right\">\r\n            <button \r\n            type=\"button\"\r\n            class=\"btn btn-primary\" \r\n            name=\"orderBy\"\r\n            (click)=\"loadMembers()\"\r\n            btnRadio='lastActive'\r\n             [(ngModel)]=\"userParams.orderBy\">Last Active</button>\r\n\r\n             <button \r\n             type=\"button\"\r\n             class=\"btn btn-primary\" \r\n             name=\"orderBy\"\r\n             (click)=\"loadMembers()\"\r\n             btnRadio='created'\r\n              [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\r\n        </div>\r\n    </div>\r\n\r\n    </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div *ngFor=\"let member of members\" class=\"col-2\">\r\n        <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination \r\n    [boundaryLinks]=\"true\" \r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\" \r\n    firstText=\"&laquo;\" \r\n    lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>\r\n\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user.model';\r\nimport { AccountService } from './_services/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title  = 'The Dating app';\r\n  users: any;\r\n  constructor(private accountService: AccountService){\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser(): void{\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    this.accountService.setCurrentUser(user);\r\n  }\r\n\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(1000),\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map, take, tap} from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member.model';\r\nimport { User } from '../_models/user.model';\r\nimport { UserParams } from '../_models/userParams.model';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationsHeaders } from './paginationHelper';\r\nimport {PaginatedResult} from '../_models/pagination.model';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n              private accountService: AccountService) {\r\n                this.accountService.currentUser$.pipe(take(1)).subscribe(\r\n                  user => {\r\n                    this.user = user;\r\n                    this.userParams = new UserParams(user);\r\n                  });\r\n  }\r\n\r\n  getUserParams(): UserParams{\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams): void{\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams(): UserParams{\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n\r\n  getMembers(userParams: UserParams): Observable<any>{\r\n    const response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response){\r\n      return of(response);\r\n    }\r\n\r\n    let params = getPaginationsHeaders(userParams.page, userParams.size);\r\n\r\n    params = params.append('minAge', userParams.minAge === null ? '0' : userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge === null ? '0' : userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\r\n    .pipe(tap(resp => {\r\n      this.memberCache.set(Object.values(userParams).join('-'), resp);\r\n    }));\r\n  }\r\n\r\n\r\n  getMember(username: string): Observable<any>{\r\n    const member = [...this.memberCache.values()]\r\n    .reduce((arr, elem) => arr.concat(elem.result), [])\r\n    .find((m: Member) => m.username === username);\r\n\r\n    if (member){\r\n      return of(member);\r\n    }\r\n\r\n\r\n    return this.http.get(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member): Observable<void>{\r\n      return this.http.put(this.baseUrl + 'users', member).pipe(\r\n        map(() => {\r\n          const index = this.members.indexOf(member);\r\n          this.members[index] = member;\r\n        })\r\n      );\r\n  }\r\n\r\n  setMainPhoto(photoId: number): Observable<object>{\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number): Observable<object>{\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId );\r\n  }\r\n\r\n  addLike(username: string): Observable<object>{\r\n      return this.http.post(this.baseUrl + 'likes/' + username, {} );\r\n\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize): Observable<PaginatedResult<Member[]>>{\r\n    let params = getPaginationsHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\nimport { InformativeDialogComponent } from './modals/informative-dialog/informative-dialog.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailsComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n    InformativeDialogComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxSpinnerModule,\r\n    ToastrModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor,  multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor,  multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor,  multi: true},\r\n    [CookieService]\r\n  ],\r\n     bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\n\r\nimport { take } from 'rxjs/operators';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { Member } from 'src/app/_models/member.model';\r\nimport { User } from 'src/app/_models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any): void {\r\n    this.hasBaseDropzoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo): void {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if (p.isMain) { p.isMain = false; }\r\n        if (p.id === photo.id) { p.isMain = true; }\r\n      });\r\n    });\r\n  }\r\n\r\n  deletePhoto(photoId: number): void {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\r\n    });\r\n  }\r\n\r\n  initializeUploader(): void {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n        if (JSON.parse(response).main) {\r\n           this.user.photoUrl = photo.url;\r\n           this.member.photoUrl = photo.url;\r\n         }\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n        <div class=\"text-center\">\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\r\n                class=\"btn btn-sm\"\r\n            >Main</button>\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                class=\"btn btn-sm btn-danger\"\r\n            ><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n \r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop\r\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\r\n             (fileOver)=\"fileOverBase($event)\"\r\n             [uploader]=\"uploader\"\r\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n             <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"50%\">Name</th>\r\n                <th>Size</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of uploader.queue\">\r\n                <td><strong>{{ item?.file?.name }}</strong></td>\r\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\" style=\"\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member.model';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member>{\r\n\r\n    constructor(private memberService: MembersService){\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n      this.ngControl.valueAccessor = this;\r\n  }\r\n  writeValue(obj: any): void {\r\n    // TODO document why this method 'writeValue' is empty\r\n\r\n\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input \r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type={{type}} \r\n    class=\"form-control\"  \r\n    [formControl]=\"ngControl.control\" \r\n    placeholder={{label}}>\r\n    <div *ngIf=\"ngControl.control.errors?.required\" \r\n        class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" \r\n        class=\"invalid-feedback\">\r\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" \r\n        class=\"invalid-feedback\">\r\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" \r\n        class=\"invalid-feedback\">Password do not match {{label}}</div>\r\n    \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member.model';\r\nimport { Pagination } from '../_models/pagination.model';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private membersService: MembersService) { }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.add('bg-img-in1');\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes(): void{\r\n    this.membersService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(\r\n      response => {\r\n          this.members = response.result;\r\n          this.pagination = response.pagination;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any): void{\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who likes me'}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n    <div class=\"row\">\r\n        <div class=\"btn-group\" name='predicate'>\r\n            <button class=\"btn btn-primary\" btnRadio=\"liked\"[(ngModel)]=\"predicate\"\r\n                (click)=\"loadLikes()\">Members I like </button>\r\n            <button class=\"btn btn-primary\" btnRadio=\"likedBy\"[(ngModel)]=\"predicate\"\r\n                (click)=\"loadLikes()\">Members how like me </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-2\" *ngFor=\"let member of members\">\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination \r\n    [boundaryLinks]=\"true\" \r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\" \r\n    firstText=\"&laquo;\" \r\n    lastText=\"&raquo;\">\r\n    </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n\r\n\r\n  constructor(public accoutService: AccountService,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private confirmService: ConfirmService,\r\n              private cookieService: CookieService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (window.localStorage.getItem('firstEnter') === null){\r\n      window.localStorage.setItem('firstEnter', 'false');\r\n      this.about();\r\n    }\r\n  }\r\n\r\n  login(): void{\r\n      this.accoutService.login(this.model).subscribe(\r\n        response => {\r\n          this.router.navigateByUrl('/members');\r\n        });\r\n  }\r\n  logout(): void{\r\n    this.accoutService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  about(): void{\r\n      this.confirmService.informative();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top btn-success\">\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\r\n      <button class=\"navbar-toggler collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"navbar-collapse collapse\" id=\"navbarCollapse\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n          <ng-container *ngIf=\"accoutService.currentUser$ | async\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" aria-current=\"page\" routerLink='/members' routerLinkActive='active' >Matches</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active' >Lists</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" routerLink='/messages' routerLinkActive='active' >Messages</a>\r\n          </li>\r\n          <li *appHasRole='[\"ADMIN\", \"MODERATOR\"]' class=\"nav-item\">\r\n            <a class=\"nav-link \" routerLink='/admin' routerLinkActive='active' >Admin</a>\r\n          </li>\r\n        </ng-container>\r\n        <li *appHasRole='[\"ADMIN\"]' class=\"nav-item\">\r\n          <a class=\"nav-link \" routerLink='/errors' routerLinkActive='active' >Errors</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link \"(click)=\"about()\" routerLinkActive='active' >About</a>\r\n        </li>\r\n        </ul>\r\n       \r\n      </div>\r\n      <form *ngIf=\"(accoutService.currentUser$ | async) == null \"  #loginForm=\"ngForm\" class=\"d-flex\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n        <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control me-2\"\r\n        type=\"text\" \r\n        placeholder=\"Username\">\r\n        <input\r\n          name=\"password\"\r\n          [(ngModel)]=\"model.password\"\r\n         class=\"form-control me-2\" \r\n         type=\"password\" \r\n         placeholder=\"Password\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">Login</button>\r\n      </form>\r\n      <div class=\"dropdown\" *ngIf=\"(accoutService.currentUser$ | async) as user\"  dropdown>\r\n        <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n        <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n        <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n            <a class=\"dropdown-item \" routerLink=\"/member/edit\">Edit Profile</a>\r\n            <div class=\"dropdown-divider\"></div>\r\n            <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\r\n  </nav>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member.model';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(private memberService: MembersService,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  addLike(member: Member): void{\r\n        this.memberService.addLike(member.username).subscribe(\r\n      () => {\r\n          this.toastr.success('You have liked ' + member.knownAs);\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n                <i class=\"fa fa-user\"></i></button></li>\r\n            <li class=\"list-inline-item\"><button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n                <i class=\"fa fa-heart\"></i></button></li>\r\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}'\r\n                [queryParams]='{tab: 3}'\r\n                 class=\"btn btn-primary\">\r\n                <i class=\"fa fa-envelope\"></i></button></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user mr-2\"></i>\r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>\r\n","import { User } from './user.model';\r\n\r\nexport class UserParams{\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    page = 1;\r\n    size = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User){\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}\r\n","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    result: T;\r\n    pagination: Pagination;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"ADMIN\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"ADMIN\", \"MODERATOR\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member.model';\r\nimport { User } from 'src/app/_models/user.model';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any): void{\r\n    $event.returnValue = true;\r\n  }\r\n\r\n  constructor(private accountservice: AccountService,\r\n              private memberService: MembersService,\r\n              private toastr: ToastrService) {\r\n                this.accountservice.currentUser$.pipe(take(1)).subscribe(\r\n                  user => {\r\n                    this.user = user;\r\n                  }\r\n                );\r\n               }\r\n\r\n  ngOnInit(): void {\r\n    document.body.classList.add('bg-img-in1');\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember(): void{\r\n    this.memberService.getMember(this.user.username).subscribe(\r\n      member => {\r\n        this.member = member;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateMember(): void{\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n       <h1>Your profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong>You have made changes. Any unsaved changes will be lost.\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n                <div class=\"card-body\">\r\n                    <div>\r\n                        <strong>Location:</strong>\r\n                        <p>{{member.city}}, {{member.country}}</p>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Age:</strong>\r\n                        <p>{{member.age}}</p>\r\n                    </div>\r\n                     <div>\r\n                        <strong>Last Active:</strong>\r\n                        <p>{{member.lastActive | timeago}}</p>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Member since:</strong>\r\n                        <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n       \r\n                </div>\r\n                <div class=\"card-footer\">\r\n                        <button [disabled]=\"!editForm.dirty\r\n                        \" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\r\n                 </div>\r\n                </div>\r\n        </div>\r\n</div>\r\n\r\n<div class=\"col-8\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='About {{member.knownAs}}'>\r\n            <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n                <h4>Description</h4>\r\n                <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                <h4 class=\"mt-2\">Looking for</h4>\r\n                <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea> \r\n                <h4 class=\"mt-2\">Interests</h4>\r\n                <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea> \r\n                <h4 class=\"mt-2\">Location Details:</h4>\r\n                <div class=\"form-inline\">\r\n                    <label for=\"city\">City: </label>\r\n                    <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                    <label for=\"city\">Country: </label>\r\n                    <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                </div>\r\n            </form>\r\n            \r\n        </tab>\r\n        <tab heading='Edit Photos'>\r\n            <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n        </tab>\r\n \r\n    </tabset>\r\n</div>\r\n</div>\r\n","import {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {PaginatedResult} from '../_models/pagination.model';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient): Observable<PaginatedResult<T>> {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, {observe: 'response', params}).pipe(\r\n    map(response => {\r\n      paginatedResult.result = response.body;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationsHeaders(pageNumber: number, pageSize: number): HttpParams {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\nconstructor(private confirmService: ConfirmService){\r\n\r\n}\r\n\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean{\r\n    if (component.editForm.dirty){\r\n      return this.confirmService.confirm();\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n  btnOkText: string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bfModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n    // TODO document why this method 'ngOnInit' is empty\r\n\r\n\r\n  }\r\n\r\n  confirm(): void{\r\n    this.result = true;\r\n    this.bfModalRef.hide();\r\n  }\r\n\r\n  decline(): void{\r\n    this.result = false;\r\n    this.bfModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n     <p>{{message}}</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailsComponent } from './members/member-details/member-details.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { InformativeDialogComponent } from './modals/informative-dialog/informative-dialog.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent},\r\n      {path: 'members/:username', component: MemberDetailsComponent, resolve: {member: MemberDetailedResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\r\n      {path: 'lists', component: ListsComponent},\r\n      {path: 'messages', component: MessagesComponent},\r\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\r\n      {path: 'errors', component: TestErrorsComponent}\r\n    ]\r\n  },\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\nimport { InformativeDialogComponent } from '../modals/informative-dialog/informative-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation',\r\n          message = 'Are you sure you want to do this? When you choose yes than any change is lose!',\r\n          btnOkText = 'Ok',\r\n          btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title,\r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      };\r\n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n\r\n      return new Observable<boolean>(this.getResult());\r\n  }\r\n\r\n  private getResult(): (observer: any) => {unsubscribe(): void} {\r\n    return (observer) => {\r\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\r\n        observer.next(this.bsModelRef.content.result);\r\n        observer.complete();\r\n      });\r\n\r\n      return {\r\n        unsubscribe(): void {\r\n          subscription.unsubscribe();\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  informative(): void {\r\n    const initialState = {\r\n      title: 'Hi!'\r\n    };\r\n    this.bsModelRef = this.modalService.show(InformativeDialogComponent, {initialState});\r\n    this.bsModelRef.content.closeBtnName = 'Close';\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles(): void{\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n            <input type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                [checked]=\"role.checked\"\r\n                value=\"role.name\"\r\n                (change)=\"role.checked = !role.checked\"\r\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n            >\r\n            <label>{{role.name}}</label>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}